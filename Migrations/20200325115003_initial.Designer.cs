// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using optomŠifrarnik.Context;

namespace optomŠifrarnik.Migrations
{
    [DbContext(typeof(MojContext))]
    [Migration("20200325115003_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("optomŠifrarnik.Models.PodstavkaSifrarnika", b =>
                {
                    b.Property<int>("PodstavkaSifrarnikaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Preduzece")
                        .IsRequired();

                    b.Property<int>("RedniBroj");

                    b.Property<int>("StavkaSifrarnikaId");

                    b.HasKey("PodstavkaSifrarnikaId");

                    b.ToTable("PodstavkaSifrarnika");

                    b.HasData(
                        new { PodstavkaSifrarnikaId = 1, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Vozilo parkirano na nepropisno mjesto...", Oznaka = "NEPRAVILNO_PARKIRANJE", Preduzece = "RAD", RedniBroj = 0, StavkaSifrarnikaId = 2 },
                        new { PodstavkaSifrarnikaId = 2, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Potreban pauz za odvoz vozila", Oznaka = "PAUK_ZA_ODVOZ_VOZILA", Preduzece = "RAD", RedniBroj = 0, StavkaSifrarnikaId = 1 },
                        new { PodstavkaSifrarnikaId = 3, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Potreban pauz za odvoz vozila", Oznaka = "PAUK_ZA_ODVOZ_VOZILA_1", Preduzece = "RAD", RedniBroj = 0, StavkaSifrarnikaId = 1 }
                    );
                });

            modelBuilder.Entity("optomŠifrarnik.Models.Sifrarnik", b =>
                {
                    b.Property<int>("SifrarnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja");

                    b.Property<bool>("Kesiranje");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Opis")
                        .IsRequired();

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Programerski");

                    b.HasKey("SifrarnikId");

                    b.ToTable("Sifrarnik");

                    b.HasData(
                        new { SifrarnikId = 1, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 615, DateTimeKind.Local), Kesiranje = false, Naziv = "Problemi tokom izvršavanja", Opis = "Da li je prilikom izvršavanja...", Oznaka = "IZVRSENJE_PROBLEMI", Programerski = false },
                        new { SifrarnikId = 2, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 619, DateTimeKind.Local), Kesiranje = true, Naziv = "Kvalifikacija zalbi", Opis = "Stablo za klasificiranje...", Oznaka = "Kvalifikacija-ZALBE", Programerski = true }
                    );
                });

            modelBuilder.Entity("optomŠifrarnik.Models.StavkaSifrarnika", b =>
                {
                    b.Property<int>("StavkaSifrarnikaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja");

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Preduzece")
                        .IsRequired();

                    b.Property<int>("RedniBroj");

                    b.Property<int>("SifrarnikId");

                    b.HasKey("StavkaSifrarnikaId");

                    b.ToTable("StavkaSifrarnika");

                    b.HasData(
                        new { StavkaSifrarnikaId = 1, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Sa vodom i otpadnim vodama", Oznaka = "VODA", Preduzece = "KJKP Vodovod i kanali", RedniBroj = 0, SifrarnikId = 2 },
                        new { StavkaSifrarnikaId = 2, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Sa parkingom", Oznaka = "PARKING", Preduzece = "RAD", RedniBroj = 1, SifrarnikId = 2 },
                        new { StavkaSifrarnikaId = 3, DatumKreiranja = new DateTime(2020, 3, 25, 12, 50, 3, 620, DateTimeKind.Local), Naziv = "Sa vodom i otpadnim vodama", Oznaka = "VODA", Preduzece = "KJKP Vodovod i kanali", RedniBroj = 0, SifrarnikId = 1 }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
